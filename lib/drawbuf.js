// Super primitive drawing library!

var fs = require('fs');
var PNG = require('pngjs').PNG;

// Here's our hand made 7px font!
var font = {};
font[0] = {"33":[[2,0],[2,1],[2,2],[2,3],[2,4],[2,6]],"34":[[0,0],[3,0],[0,1],[1,1],[3,1],[4,1]],"35":[[1,0],[3,0],[0,1],[1,1],[2,1],[3,1],[4,1],[1,2],[3,2],[1,3],[3,3],[1,4],[3,4],[0,5],[1,5],[2,5],[3,5],[4,5],[1,6],[3,6]],"37":[[0,0],[1,0],[4,0],[0,1],[1,1],[4,1],[3,2],[2,3],[1,4],[0,5],[3,5],[4,5],[0,6],[3,6],[4,6]],"38":[[1,0],[2,0],[0,1],[3,1],[0,2],[3,2],[1,3],[2,3],[4,3],[0,4],[3,4],[0,5],[3,5],[1,6],[2,6],[4,6]],"40":[[2,0],[3,0],[1,1],[1,2],[1,3],[1,4],[1,5],[2,6],[3,6]],"41":[[1,0],[2,0],[3,1],[3,2],[3,3],[3,4],[3,5],[1,6],[2,6]],"42":[[1,1],[3,1],[2,2],[0,3],[1,3],[2,3],[3,3],[4,3],[2,4],[1,5],[3,5]],"43":[[2,1],[2,2],[0,3],[1,3],[2,3],[3,3],[4,3],[2,4],[2,5]],"44":[[1,5],[2,5],[2,6]],"45":[[0,3],[1,3],[2,3],[3,3],[4,3]],"46":[[2,6]],"48":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[3,2],[4,2],[0,3],[2,3],[4,3],[0,4],[1,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"49":[[2,0],[1,1],[2,1],[0,2],[2,2],[2,3],[2,4],[2,5],[0,6],[1,6],[2,6],[3,6],[4,6]],"50":[[1,0],[2,0],[3,0],[0,1],[4,1],[4,2],[1,3],[2,3],[3,3],[0,4],[0,5],[0,6],[1,6],[2,6],[3,6],[4,6]],"51":[[1,0],[2,0],[3,0],[0,1],[4,1],[4,2],[2,3],[3,3],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"52":[[3,0],[4,0],[2,1],[4,1],[1,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4],[4,5],[4,6]],"53":[[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,2],[2,2],[3,2],[0,3],[4,3],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"54":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[0,3],[1,3],[2,3],[3,3],[0,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"55":[[0,0],[1,0],[2,0],[3,0],[4,0],[4,1],[4,2],[3,3],[2,4],[2,5],[2,6]],"56":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[1,3],[2,3],[3,3],[0,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"57":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[1,3],[2,3],[3,3],[4,3],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"58":[[2,2],[2,4]],"59":[[2,2],[1,5],[2,5],[2,6]],"60":[[3,1],[2,2],[1,3],[2,4],[3,5]],"61":[[0,2],[1,2],[2,2],[3,2],[4,2],[0,4],[1,4],[2,4],[3,4],[4,4]],"62":[[1,1],[2,2],[3,3],[2,4],[1,5]],"63":[[1,0],[2,0],[3,0],[0,1],[4,1],[4,2],[2,3],[3,3],[2,4],[2,6]],"64":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[2,2],[3,2],[4,2],[0,3],[2,3],[4,3],[0,4],[2,4],[3,4],[4,4],[0,5],[1,6],[2,6],[3,6],[4,6]],"65":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[4,3],[0,4],[4,4],[0,5],[4,5],[0,6],[4,6]],"66":[[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[0,4],[4,4],[0,5],[4,5],[0,6],[1,6],[2,6],[3,6]],"67":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[0,3],[0,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"68":[[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[4,4],[0,5],[4,5],[0,6],[1,6],[2,6],[3,6]],"69":[[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[0,3],[1,3],[2,3],[3,3],[0,4],[0,5],[0,6],[1,6],[2,6],[3,6],[4,6]],"70":[[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[0,3],[1,3],[2,3],[3,3],[0,4],[0,5],[0,6]],"71":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[0,3],[0,4],[3,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"72":[[0,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[4,3],[0,4],[4,4],[0,5],[4,5],[0,6],[4,6]],"73":[[0,0],[1,0],[2,0],[3,0],[4,0],[2,1],[2,2],[2,3],[2,4],[2,5],[0,6],[1,6],[2,6],[3,6],[4,6]],"74":[[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[4,2],[4,3],[0,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"75":[[0,0],[4,0],[0,1],[4,1],[0,2],[3,2],[0,3],[1,3],[2,3],[0,4],[3,4],[0,5],[4,5],[0,6],[4,6]],"76":[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[1,6],[2,6],[3,6],[4,6]],"77":[[0,0],[4,0],[0,1],[4,1],[0,2],[1,2],[3,2],[4,2],[0,3],[2,3],[4,3],[0,4],[2,4],[4,4],[0,5],[4,5],[0,6],[4,6]],"78":[[0,0],[4,0],[0,1],[4,1],[0,2],[1,2],[4,2],[0,3],[2,3],[4,3],[0,4],[3,4],[4,4],[0,5],[4,5],[0,6],[4,6]],"79":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"80":[[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[0,4],[0,5],[0,6]],"81":[[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[2,4],[4,4],[0,5],[3,5],[1,6],[2,6],[4,6]],"82":[[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[0,4],[2,4],[0,5],[3,5],[0,6],[4,6]],"83":[[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,3],[2,3],[3,3],[4,4],[4,5],[0,6],[1,6],[2,6],[3,6]],"84":[[0,0],[1,0],[2,0],[3,0],[4,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6]],"85":[[0,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[4,4],[0,5],[4,5],[1,6],[2,6],[3,6]],"86":[[0,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[4,4],[1,5],[3,5],[2,6]],"87":[[0,0],[4,0],[0,1],[4,1],[0,2],[2,2],[4,2],[0,3],[2,3],[4,3],[0,4],[2,4],[4,4],[0,5],[2,5],[4,5],[1,6],[3,6]],"88":[[0,0],[4,0],[0,1],[4,1],[1,2],[3,2],[2,3],[1,4],[3,4],[0,5],[4,5],[0,6],[4,6]],"89":[[0,0],[4,0],[0,1],[4,1],[1,2],[3,2],[2,3],[2,4],[2,5],[2,6]],"90":[[0,0],[1,0],[2,0],[3,0],[4,0],[4,1],[3,2],[2,3],[1,4],[0,5],[0,6],[1,6],[2,6],[3,6],[4,6]],"91":[[1,0],[2,0],[3,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[2,6],[3,6]],"92":[[0,0],[0,1],[1,2],[2,3],[3,4],[4,5],[4,6]],"93":[[1,0],[2,0],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[1,6],[2,6],[3,6]],"94":[[2,0],[1,1],[3,1],[0,2],[4,2]],"95":[[0,6],[1,6],[2,6],[3,6],[4,6]],"123":[[1,0],[2,0],[3,0],[1,1],[1,2],[0,3],[1,3],[1,4],[1,5],[1,6],[2,6],[3,6]],"124":[[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6]],"125":[[1,0],[2,0],[3,0],[3,1],[3,2],[3,3],[4,3],[3,4],[3,5],[1,6],[2,6],[3,6]],"126":[[1,2],[4,2],[0,3],[2,3],[4,3],[0,4],[3,4]],"":[[2,6]]};

function drawbuf(width,height) {
	var self = this;

	self.width  = width;
	self.height = height;
	self.canvas = [];
	self.lastBackgroundColor = self.rgb(0,0,0);

	for (var y = 0; y < self.height; y++) {
		var buf = new Buffer(self.width * 3); // * 3 for RGB.
		self.canvas.push(buf);
	}

	return self;
}

drawbuf.prototype.backgroundColor = function(backgroundColor) {
	var self = this;
	self.lastBackgroundColor = backgroundColor;

	for (var y = 0; y < self.height; y++) {
		for (var x = 0; x < self.width; x++) {
			self.pixel(x,y,backgroundColor);
		}
	}

	return true;
};

drawbuf.prototype.pixel = function (x, y, color) {
	var self = this;

	var line = self.canvas[y];
	line.writeUIntBE(color.readUIntBE(0, 3), x * 3, 3);

	return true;
};

drawbuf.prototype.horizontalLine = function (y, color) {
	var self = this;

	for (var x = 0; x < self.width; x++) {
		self.pixel(x,y,color);
	}

	return true;
};

drawbuf.prototype.verticalLine = function (x, color) {
	var self = this;

	for (var y = 0; y < self.height; y++) {
		self.pixel(x,y,color);
	}

	return true;
};

drawbuf.prototype.boxFilled = function (x1,y1,x2,y2,color) {
	var self = this;

	for (var y = y1; y < y2; y++) {
		for (var x = x1; x < x2; x++) {
			self.pixel(x,y,color);
		}
	}

	return true;
};

drawbuf.prototype.boxLine = function (x1,y1,x2,y2,color) {
	var self = this;

	for (var y = y1; y <= y2; y++) {
		var line = self.canvas[y];

		// draw horizontal lines
		if (y == y1 || y == y2) {
			for (var x = x1; x <= x2; x++) {
				self.pixel(x,y,color);
			}
		}

		// draw vertical lines
		if (y > y1 || y < y2) {
			self.pixel(x1,y,color);
			self.pixel(x2,y,color);
		}
	}

	return true;
};


drawbuf.prototype.rgb = function (r,g,b) {
	var self = this;

	var buf = new Buffer(3);
	buf.writeUInt8(r, 0);
	buf.writeUInt8(g, 1);
	buf.writeUInt8(b, 2);

	return buf;
};

drawbuf.prototype.drawFromPNG = function(file,xStart,yStart) {
	var self = this;
	var data = fs.readFileSync(file);
	var png = PNG.sync.read(data);
	for (var y = 0; y < png.height && y < self.height - yStart; y++) {
		for (var x = 0; x < png.width && x < self.width - xStart; x++) {
			var idx = (png.width * y + x) << 2;
			var r = png.data[idx];
			var g = png.data[idx+1];
			var b = png.data[idx+2];
			// added ultracheap support for png transparency (only 100% transparent)
			if (png.data[idx+3] != 0) {
				self.pixel(xStart + x, yStart + y, self.rgb(r,g,b));
			}
		}
	}
}
drawbuf.prototype.drawText = function(x,y,text,color,fontindex,spacing) {
	var self = this;
	if (spacing === undefined) {
		spacing = 2;
	}
	var chars = text.split("");
	var x_pos = x;
	for (var i in chars) {
		x_pos += 2 + self.drawLetter(x+x_pos,y,chars[i],color,fontindex);
	}
	return true;
}

drawbuf.prototype.drawLetter = function(x,y,letter,color,fontindex) {
	var self = this;

	if (letter === undefined || letter.length > 1 || letter.length == 0) return 0;

	var num = letter.toUpperCase().charCodeAt(0);

	if (num == 32) return 2;	// return blanks for space
	if (font[fontindex] === undefined || font[fontindex][num] === undefined) return 0;

	var gfx = font[fontindex][num];
	var maxX = 0;

	for (var pixel in gfx) {
		if (gfx[pixel][0] > maxX) maxX = gfx[pixel][0];
		self.pixel(x + gfx[pixel][0], y + gfx[pixel][1], color);
	}

	return maxX;
}

drawbuf.prototype.buffer = function() {
	var self = this;
	return Buffer.concat(self.canvas);
}

exports = module.exports = function (width, height) {
	return new drawbuf(width, height);
};
